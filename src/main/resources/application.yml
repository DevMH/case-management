server:
  port: 8080

elastic:
  user: elastic
  apiKey: cVYbpGXH
  host: localhost
  port: 9200

spring:
  datasource:
    url: jdbc:h2:mem:batchdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    template:
      default-topic: case-changes
  batch:
    job:
      enabled: true
    jdbc:
      initialize-schema: always

#elastic.user=elastic
  #elastic.apiKey=cVYbpGXH
  #elastic.host=localhost
  #elastic.port=9200
  #dynamically injected URI from the extension:
  #elasticsearch:
  #  uris: ${spring.elasticsearch.uris:${SPRING_ELASTICSEARCH_URIS:http://localhost:9200}}
  #elasticsearch:
  #  uris: http://localhost:9200
  #  username: elastic
  #  password: your-password
  #  connection-timeout: 1s
  #  socket-timeout: 30s

  mail:
    host: smtp.example.com
    port: 587
    username: your.email@example.com
    password: your-email-password
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  neo4j:
    uri:
    authentication:
      username: neo4j
      password: your-password

logging:
  level:
    org.springframework.batch: DEBUG
    org.springframework.data.elasticsearch.client: DEBUG
    org.springframework.data.neo4j: DEBUG